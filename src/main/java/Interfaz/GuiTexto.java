/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import diseno.casomemento.FileManager;
import diseno.casomemento.Formateador;
import diseno.casomemento.Texto;
import diseno.casomemento.TextoGui;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author Usuario
 */
public class GuiTexto extends javax.swing.JFrame {
  
    
    /**
     * Creates new form GuiTexto
     */
    private TextoGui textoGui;
    SimpleAttributeSet attributeSet = new SimpleAttributeSet(); 
    
    public GuiTexto() throws BadLocationException {
        textoGui = new TextoGui();
        initComponents();
    }
    
    public GuiTexto iniciarColor() throws BadLocationException{
        txtArea.setCharacterAttributes(attributeSet, true);
        cambiarColor("#000000");
        textoGui.getTexto().addColor("#000000");
        return this;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void cambiarColor(String color) throws BadLocationException{
        txtArea.setCharacterAttributes(attributeSet, true);
        attributeSet = new SimpleAttributeSet();  
        StyleConstants.setForeground(attributeSet, Color.decode(color));
        Document doc = txtArea.getStyledDocument();
        doc.insertString(doc.getLength(), "", attributeSet);
    }
    
    public void actualizarTexto(String texto) throws BadLocationException{
        txtArea.setText("");
        ArrayList<String> format = Formateador.listaFormatText(texto); //Agregar la clase que formatea
        for(int i = 0; i < format.size(); i++){
            if(i%2==0)
                this.cambiarColor(format.get(i));
            else{
                Document doc = txtArea.getStyledDocument();
                doc.insertString(doc.getLength(), format.get(i), attributeSet);
            }
        }
        //txtArea.setText(texto);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGuardar1 = new javax.swing.JButton();
        panelTexto = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextPane();
        panelBtn = new javax.swing.JPanel();
        btnAbrir = new javax.swing.JButton();
        btnGuardarJson = new javax.swing.JButton();
        jColor = new javax.swing.JColorChooser();
        btnSiguiente = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnCambiarColor = new javax.swing.JButton();
        btnGuardarTxt = new javax.swing.JButton();
        btnGuardarTSV = new javax.swing.JButton();

        btnGuardar1.setBackground(new java.awt.Color(0, 102, 255));
        btnGuardar1.setText("Guardar");
        btnGuardar1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 2, true));
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        txtArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAreaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtArea);

        javax.swing.GroupLayout panelTextoLayout = new javax.swing.GroupLayout(panelTexto);
        panelTexto.setLayout(panelTextoLayout);
        panelTextoLayout.setHorizontalGroup(
            panelTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTextoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        panelTextoLayout.setVerticalGroup(
            panelTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTextoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelBtn.setBackground(new java.awt.Color(255, 255, 255));

        btnAbrir.setBackground(new java.awt.Color(0, 102, 255));
        btnAbrir.setText("Abrir");
        btnAbrir.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnGuardarJson.setBackground(new java.awt.Color(0, 102, 255));
        btnGuardarJson.setText("Guardar como Json");
        btnGuardarJson.setToolTipText("");
        btnGuardarJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarJsonActionPerformed(evt);
            }
        });

        jColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jColorMousePressed(evt);
            }
        });
        jColor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jColorPropertyChange(evt);
            }
        });

        btnSiguiente.setBackground(new java.awt.Color(0, 102, 255));
        btnSiguiente.setText("Siguiente");
        btnSiguiente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnAnterior.setBackground(new java.awt.Color(0, 102, 255));
        btnAnterior.setText("Anterior");
        btnAnterior.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnCambiarColor.setBackground(new java.awt.Color(0, 102, 255));
        btnCambiarColor.setText("Cambiar Color");
        btnCambiarColor.setActionCommand("cambiarColor");
        btnCambiarColor.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));
        btnCambiarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarColorActionPerformed(evt);
            }
        });

        btnGuardarTxt.setBackground(new java.awt.Color(0, 102, 255));
        btnGuardarTxt.setText("Guardar como Texto");
        btnGuardarTxt.setToolTipText("");
        btnGuardarTxt.setActionCommand("Guardar como ");
        btnGuardarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarTxtActionPerformed(evt);
            }
        });

        btnGuardarTSV.setBackground(new java.awt.Color(0, 102, 255));
        btnGuardarTSV.setText("Guardar como Tabulado");
        btnGuardarTSV.setToolTipText("");
        btnGuardarTSV.setActionCommand("Guardar como Tabulado");
        btnGuardarTSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarTSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBtnLayout = new javax.swing.GroupLayout(panelBtn);
        panelBtn.setLayout(panelBtnLayout);
        panelBtnLayout.setHorizontalGroup(
            panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCambiarColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarJson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarTSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAbrir, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(btnGuardarTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addComponent(jColor, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBtnLayout.setVerticalGroup(
            panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBtnLayout.createSequentialGroup()
                        .addGroup(panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBtnLayout.createSequentialGroup()
                                .addGroup(panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCambiarColor, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardarJson, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardarTSV, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jColor, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        
        JFileChooser abrir = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES","txt", "*.txt","json","*.json","*.tsv");
        abrir.setFileFilter(filter);
        abrir.showSaveDialog(null);
        abrir.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    
        System.out.println( abrir.getSelectedFile());
        String text = "";
        try {
            text = FileManager.readFile(abrir.getSelectedFile());
            
        } catch (IOException ex) {
            Logger.getLogger(GuiTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        txtArea.setText(text);
        
        /*
            try {
            // TODO add your handling code here:
            new Upload(textoGui).setVisible(true);
            } catch (IOException ex) {
            Logger.getLogger(GuiTexto.class.getName()).log(Level.SEVERE, null, ex);
            }
            */
        
        
        
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void btnGuardarJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarJsonActionPerformed
            
        JFileChooser guardar = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES","txt", "*.txt","json","*.json","*.tsv","tsv");
        guardar.setFileFilter(filter);
        guardar.showSaveDialog(null);
        guardar.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
        System.out.println( guardar.getSelectedFile());
       
        try {
            this.textoGui.save(txtArea.getText());
            String txt = this.textoGui.getTexto().getTexto();
            FileManager.writeFile(txt,guardar.getSelectedFile());
        } catch (IOException ex) {
            Logger.getLogger(GuiTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnGuardarJsonActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
        textoGui.previous();
        try {
            textoGui.updateTexto(this);
        } catch (BadLocationException ex) {
            Logger.getLogger(GuiTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        textoGui.next();
        try {
            textoGui.updateTexto(this);
        } catch (BadLocationException ex) {
            Logger.getLogger(GuiTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void txtAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAreaKeyReleased
        // TODO add your handling code here:
        switch (evt.getKeyCode()) {
            case 32: case 10: case 9: case 46: case 8: case 127:
                this.textoGui.save(txtArea.getText());
                break;
            default:
                
        }
    }//GEN-LAST:event_txtAreaKeyReleased

    private void jColorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jColorMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jColorMousePressed

    private void jColorPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jColorPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jColorPropertyChange

    private void btnCambiarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarColorActionPerformed
        // TODO add your handling code here:
        String hex = "#" + Integer.toHexString(jColor.getColor().getRGB() & 0xffffff);
        System.out.println(hex);
        try {
            this.cambiarColor(hex);
            this.cambiarColor(hex);
        } catch (BadLocationException ex) {
            Logger.getLogger(GuiTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
        textoGui.getTexto().addColor(hex);
        System.out.println(textoGui.getTexto().getTexto());
    }//GEN-LAST:event_btnCambiarColorActionPerformed

    private void btnGuardarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarTxtActionPerformed

    private void btnGuardarTSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarTSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarTSVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GuiTexto().iniciarColor().setVisible(true);
                } catch (BadLocationException ex) {
                    Logger.getLogger(GuiTexto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnCambiarColor;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnGuardarJson;
    private javax.swing.JButton btnGuardarTSV;
    private javax.swing.JButton btnGuardarTxt;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JColorChooser jColor;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelBtn;
    private javax.swing.JPanel panelTexto;
    private javax.swing.JTextPane txtArea;
    // End of variables declaration//GEN-END:variables
}
